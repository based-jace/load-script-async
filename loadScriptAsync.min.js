"use strict";class loadScriptAsync{ReplaceHtml(e,t){try{const c=new DOMParser,r=c.parseFromString(e,"text/html"),n=t.cloneNode(!1);t.parentNode.replaceChild(n,t),this.PlaceElems(r.head,n,!0),this.PlaceElems(r.body,n,!0)}catch(e){return console.log(e),!1}return!0}CheckForScripts(e){return!!e.innerHTML.match(/<script[\s\S]*?>[\s\S]*?<\/script>/iu)}PlaceElems(e,t,c=!0,r=!1){if(c&&!this.CheckForScripts(e))return t.innerHTML+=e.innerHTML,!0;const n=e.childNodes;for(let e of n)if("SCRIPT"===e.tagName){const c=document.createElement("script"),r=e.src;if(r&&""!==r)c.src=r;else{const t=document.createTextNode(e.innerHTML);c.appendChild(t)}t.appendChild(c)}else try{if(void 0!==e.children){const c=e.cloneNode(!1);t.appendChild(c),this.PlaceElems(e,c,r,!1)}else t.appendChild(e.cloneNode(!0))}catch(e){return console.log(e),!1}return!0}}